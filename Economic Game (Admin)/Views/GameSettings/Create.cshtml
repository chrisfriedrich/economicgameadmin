@model Economic_Game__Admin_.Models.GameSettings

@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <table class="table" style="width: 500px; margin: 0 auto;">
        <tr>
            <th colspan="2">
                <h2>Create Setting Set</h2>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </th>
        </tr>
        <tr>
            <td style="width: 30%;">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.StartingAmount, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.StartingAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartingAmount, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Round1Multiplier, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.Round1Multiplier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Round1Multiplier, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Round2Multiplier, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.Round2Multiplier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Round2Multiplier, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Round3Multiplier, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.Round3Multiplier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Round3Multiplier, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Round4Multiplier, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.Round4Multiplier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Round4Multiplier, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Round1ReturnPercentage, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.Round1ReturnPercentage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Round1ReturnPercentage, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Round2ReturnPercentage, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.Round2ReturnPercentage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Round2ReturnPercentage, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Round3ReturnPercentage, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.Round3ReturnPercentage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Round3ReturnPercentage, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>
                @Html.LabelFor(model => model.Round4ReturnPercentage, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.Round4ReturnPercentage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Round4ReturnPercentage, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.SelectedSettings, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                <div class="checkbox">
                    @Html.EditorFor(model => model.SelectedSettings)
                    @Html.ValidationMessageFor(model => model.SelectedSettings, "", new { @class = "text-danger" })
                </div>
            </td>
        </tr>
        <tr>
            <td class="text-center" colspan="2">
                <br />
                <a href="~/GameSettings" class="btn btn-default"><span class="glyphicon glyphicon-ban-circle"></span>&nbsp;&nbsp;Cancel</a>&nbsp;&nbsp;
                <button type="submit" class="btn btn-default"><span class="glyphicon glyphicon-plus-sign"></span>&nbsp;&nbsp;Create</button>
            </td>
        </tr>
    </table>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
